/**
 * 
 */
package top.anets.aspect;

import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.annotation.Around;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Pointcut;
import org.springframework.stereotype.Component;

import lombok.extern.slf4j.Slf4j;

/**
 * @author Administrator
 *
 */
@Slf4j
@Aspect
@Component
public class LogAspect {
	@Pointcut("@annotation(top.anets.annotation.RequireLog)")
     public void logPointcut() {};
     
     
     
     @Around("logPointcut()")
     public Object around(ProceedingJoinPoint jp) throws Throwable {
    	 long t1=System.currentTimeMillis();
     	Object result=jp.proceed();//调用下一个切面或目标方法
     	long t2=System.currentTimeMillis();
     	//将用户行为信息存储到数据库中.
     	saveLog(jp, (t2-t1));
     	return result;
    	
     }



	/**
	* 
	*@param jp
	*@param time
	*/
	private void saveLog(ProceedingJoinPoint jp, long time) {
		// TODO Auto-generated method stub
		
	}
     
}
